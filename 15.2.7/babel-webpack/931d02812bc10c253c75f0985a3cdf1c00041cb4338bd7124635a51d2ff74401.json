{"ast":null,"code":"import { catchError, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/calculator-api.service\";\nimport * as i2 from \"./screen/screen.component\";\nimport * as i3 from \"./buttons/buttons.component\";\nexport class CalculatorComponent {\n  constructor(calculatorApiService) {\n    this.calculatorApiService = calculatorApiService;\n    this.result = 0;\n    this.num1 = 0;\n    this.currentInput = 0;\n    this.operation = '';\n  }\n  onCalculate() {\n    if (this.num1 && this.currentInput && this.operation) {\n      this.calculatorApiService.calculate(this.num1, Number(this.currentInput), this.operation).pipe(tap(response => {\n        this.result = response;\n        this.num1 = 0;\n        this.currentInput = 0;\n        this.operation = '';\n      }), catchError(error => {\n        console.error('Error:', error);\n        return throwError(error);\n      })).subscribe();\n    }\n  }\n  handleButtonClick(value) {\n    if (!isNaN(Number(value))) {\n      // If it's a number\n      if (typeof this.currentInput === 'number') {\n        this.currentInput = this.currentInput * 10 + Number(value);\n      } else {\n        this.currentInput += value;\n      }\n    } else {\n      switch (value) {\n        case 'add':\n        case 'subtract':\n        case 'multiply':\n        case 'divide':\n          this.operation = value;\n          this.num1 = Number(this.currentInput);\n          this.currentInput = 0;\n          break;\n        case 'equals':\n          this.onCalculate();\n          break;\n        case 'clear':\n          this.currentInput = 0;\n          break;\n        case '.':\n          if (typeof this.currentInput === 'number') {\n            this.currentInput = this.currentInput.toString() + '.';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\nCalculatorComponent.ɵfac = function CalculatorComponent_Factory(t) {\n  return new (t || CalculatorComponent)(i0.ɵɵdirectiveInject(i1.CalculatorApiService));\n};\nCalculatorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CalculatorComponent,\n  selectors: [[\"app-calculator\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"calculator\"], [3, \"result\", \"currentInput\"], [3, \"buttonClickedEvent\"]],\n  template: function CalculatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Simple Calculator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"app-screen\", 1);\n      i0.ɵɵelementStart(4, \"app-buttons\", 2);\n      i0.ɵɵlistener(\"buttonClickedEvent\", function CalculatorComponent_Template_app_buttons_buttonClickedEvent_4_listener($event) {\n        return ctx.handleButtonClick($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"result\", ctx.result)(\"currentInput\", ctx.currentInput);\n    }\n  },\n  dependencies: [i2.ScreenComponent, i3.ButtonsComponent],\n  styles: [\".calculator[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  font-family: Arial, sans-serif;\\n}\\n.calculator[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FsY3VsYXRvci9jYWxjdWxhdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSw4QkFBQTtBQUNKO0FBQ0k7RUFDRSxlQUFBO0FBQ04iLCJzb3VyY2VzQ29udGVudCI6WyIuY2FsY3VsYXRvciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgXHJcbiAgICBoMSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIH1cclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAChD,SAASC,UAAU,QAAQ,MAAM;;;;;AAOjC,OAAM,MAAOC,mBAAmB;EAM9BC,YAAoBC,oBAA0C;IAA1C,yBAAoB,GAApBA,oBAAoB;IALxC,WAAM,GAAW,CAAC;IAClB,SAAI,GAAW,CAAC;IAChB,iBAAY,GAAoB,CAAC;IACjC,cAAS,GAAW,EAAE;EAE4C;EAElEC,WAAW;IACT,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACC,YAAY,IAAI,IAAI,CAACC,SAAS,EAAE;MACpD,IAAI,CAACJ,oBAAoB,CACtBK,SAAS,CAAC,IAAI,CAACH,IAAI,EAAEI,MAAM,CAAC,IAAI,CAACH,YAAY,CAAC,EAAE,IAAI,CAACC,SAAS,CAAC,CAC/DG,IAAI,CACHX,GAAG,CAAEY,QAAQ,IAAI;QACf,IAAI,CAACC,MAAM,GAAGD,QAAQ;QACtB,IAAI,CAACN,IAAI,GAAG,CAAC;QACb,IAAI,CAACC,YAAY,GAAG,CAAC;QACrB,IAAI,CAACC,SAAS,GAAG,EAAE;MACrB,CAAC,CAAC,EACFT,UAAU,CAAEe,KAAc,IAAI;QAC5BC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,OAAOb,UAAU,CAACa,KAAK,CAAC;MAC1B,CAAC,CAAC,CACH,CACAE,SAAS,EAAE;;EAElB;EAEAC,iBAAiB,CAACC,KAAa;IAC7B,IAAI,CAACC,KAAK,CAACT,MAAM,CAACQ,KAAK,CAAC,CAAC,EAAE;MACzB;MACA,IAAI,OAAO,IAAI,CAACX,YAAY,KAAK,QAAQ,EAAE;QACzC,IAAI,CAACA,YAAY,GAAG,IAAI,CAACA,YAAY,GAAG,EAAE,GAAGG,MAAM,CAACQ,KAAK,CAAC;OAC3D,MAAM;QACL,IAAI,CAACX,YAAY,IAAIW,KAAK;;KAE7B,MAAM;MACL,QAAQA,KAAK;QACX,KAAK,KAAK;QACV,KAAK,UAAU;QACf,KAAK,UAAU;QACf,KAAK,QAAQ;UACX,IAAI,CAACV,SAAS,GAAGU,KAAK;UACtB,IAAI,CAACZ,IAAI,GAAGI,MAAM,CAAC,IAAI,CAACH,YAAY,CAAC;UACrC,IAAI,CAACA,YAAY,GAAG,CAAC;UACrB;QACF,KAAK,QAAQ;UACX,IAAI,CAACF,WAAW,EAAE;UAClB;QACF,KAAK,OAAO;UACV,IAAI,CAACE,YAAY,GAAG,CAAC;UACrB;QACF,KAAK,GAAG;UACN,IAAI,OAAO,IAAI,CAACA,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAACA,YAAY,GAAG,IAAI,CAACA,YAAY,CAACa,QAAQ,EAAE,GAAG,GAAG;;UAExD;QACF;UACE;MAAM;;EAGd;;AA7DWlB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,8BAAwB;MAClBA,iCAAiB;MAAAA,iBAAK;MAC1BA,gCAAyE;MACzEA,sCAA8D;MAAjDA;QAAA,OAAsBC,6BAAyB;MAAA,EAAC;MAACD,iBAAc;;;MADhEA,eAAiB;MAAjBA,mCAAiB","names":["catchError","tap","throwError","CalculatorComponent","constructor","calculatorApiService","onCalculate","num1","currentInput","operation","calculate","Number","pipe","response","result","error","console","subscribe","handleButtonClick","value","isNaN","toString","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\usuario\\VSCode\\truenorth-frontend\\simple-calculator\\src\\app\\calculator\\calculator.component.ts","C:\\Users\\usuario\\VSCode\\truenorth-frontend\\simple-calculator\\src\\app\\calculator\\calculator.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CalculatorApiService } from '../services/calculator-api.service';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.scss']\n})\nexport class CalculatorComponent {\n  result: number = 0;\n  num1: number = 0;\n  currentInput: number | string = 0;\n  operation: string = '';\n\n  constructor(private calculatorApiService: CalculatorApiService) { }\n\n  onCalculate() {\n    if (this.num1 && this.currentInput && this.operation) {\n      this.calculatorApiService\n        .calculate(this.num1, Number(this.currentInput), this.operation)\n        .pipe(\n          tap((response) => {\n            this.result = response;\n            this.num1 = 0;\n            this.currentInput = 0;\n            this.operation = '';\n          }),\n          catchError((error: unknown) => {\n            console.error('Error:', error);\n            return throwError(error);\n          })\n        )\n        .subscribe();\n    }\n  }\n   \n  handleButtonClick(value: string) {\n    if (!isNaN(Number(value))) {\n      // If it's a number\n      if (typeof this.currentInput === 'number') {\n        this.currentInput = this.currentInput * 10 + Number(value);\n      } else {\n        this.currentInput += value;\n      }\n    } else {\n      switch (value) {\n        case 'add':\n        case 'subtract':\n        case 'multiply':\n        case 'divide':\n          this.operation = value;\n          this.num1 = Number(this.currentInput);\n          this.currentInput = 0;\n          break;\n        case 'equals':\n          this.onCalculate();\n          break;\n        case 'clear':\n          this.currentInput = 0;\n          break;\n        case '.':\n          if (typeof this.currentInput === 'number') {\n            this.currentInput = this.currentInput.toString() + '.';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  \n}\n","<div class=\"calculator\">\n  <h1>Simple Calculator</h1>\n  <app-screen [result]=\"result\" [currentInput]=\"currentInput\"></app-screen>\n  <app-buttons (buttonClickedEvent)=\"handleButtonClick($event)\"></app-buttons>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}